############################## Logging #########################################
#
# Set this to true or false to enable/disable java.util.logging in WPML.
# In general, you should not set this to false, and instead should modify
# the level.  This primarily to avoid missing error and warning messages.
logging.enabled=true
# Level of top level PML logging: ALL, SEVERE, WARNING, INFO, FINE, FINER, FINEST or ALL.
# To control the logging level of individual components, see the details properties
# at the end of this file.
.level=WARNING
com.ibm.watson.iot.sound.level=INFO
#org.mongodb.diagnostics.level=WARNING
#org.mongodb.diagnostics.cluster.level=WARNING
#org.mongodb.driver.cluster.level=WARNING
#org.mongodb.driver.level=INFO
#
#com.mongodb.diagnostics.level=WARNING
#com.mongodb.diagnostics.cluster.level=WARNING
#com.mongodb.driver.cluster.level=WARNING
#com.mongodb.driver.level=INFO

handlers=java.util.logging.ConsoleHandler
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
java.util.logging.ConsoleHandler.level=ALL
############################## Mongo Config #########################################
# these are the defaults.
#mongo.host=localhost
#mongo.port=27017
# Set these if the server was started with authentication.
#mongo.username=
#mongo.password=
mongo.server.select.timeout=300000
################################################################################
# Disable/enable all caching in the training/classify runtime.
# This is generally ONLY used for profiling analysis to determine the impact of caching.
#feature.caching.enabled=false
#################################################################################
# Used by the Ensemble classifier to control classifier evaluation.
# Set firstN=0 to train on all data.
#classifiers.ensemble.kfold.k=3
#classifiers.ensemble.kfold.firstN=1000
#classifiers.ensemble.kfold.maxClips=10000
#classifiers.ensemble.kfold.mth=4
#classifiers.ensemble.kfold.verbose=false
# Use average F1 score or recall to measure algorithm performance. Default is true.
#classifiers.ensemble.score_with_f1=true
# Don't include anything other than GMMs in Ensemble's ClassifierRegistry.  Defaults to false.
#classifiers.ensemble.multi-class.gmm-only=true
############# Nearest neighbor classifier configuration ######################################### 
#
# Used by AbstractNearestNeighborClassifier
# Maximum number of clusters to keep per label value
# Default is 1000.
#classifiers.nn.max_list_size=500
#
# Boundary outside which something will be considered an anomaly
# Default is 3.
#classifiers.nn.stddev_factor=3.5
#
# The reduction ratio of feature vectors when exceeding the maximum size of list of labeled features
# Value needs to be within [0.5, 1.0]. Default is 0.5
#classifiers.nn.reduction_ratio=0.5
############ New GMM classifier configuration ####################################################
#
# classifiers.gmm.unknown_threshold_coefficient used for determining the threshold for detecting known vs. unknown.
# The threshold is set as unknown_threshold_coefficient multiplied by the minimum density (the sum density from the single GMMs for each model), 
# where the minimum is among the densities of all training sound clips.
# A sound is classified as unknown when its density is below the threshold.
# The value unknown_threshold_coefficient needs to be >= 0.0.
# When unknown_threshold_coefficient = 0.0, unknown detection is completely turned off.
# A larger value of unknown_threshold_coefficient yields more sounds being detected as unknown.
# When unknown_threshold_coefficient = 1.0, the threshold is set as the maximum value such that all the training samples are classified as known.
# Default is 0.01.
#classifiers.gmm.unknown_threshold_coefficient=0.0
############ CNN classifier configuration ####################################################
# classifiers.cnn.batch_size defines the batch size of CNN classifier for stochastic gradient descent computation.
# Default is 32.
#classifiers.cnn.batch_size=32
# Defines the minimum classification score on training data that will early terminate training 
# Default is .99xx 
#classifiers.cnn.early_stopping.min_score=1.0
# Turns on CNN-specific logging during training
#classifiers.cnn.verbose=true
##################################################################################
# HttpUtil class uses a timeout for http requests.  Use this to set a 
# value other than the default of 15 seconds.
#httputil.timeout.seconds=30
############# Http clients ##################################################
# Controls whether or not clients derived from this class use https or http.
# *443 ports always use https regardless of this setting. 
# Default is false.
#com.ibm.watson.iot.sound.client.BaseHttpClient.useHttps=true
############# Data Processing/Feature extraction cache ###############################
# data.processor.cache.enabled sets whether or not caching of AbstractCachingDataProcessor
# results are cached to avoid re-computation.  Default is true.
#data.processor.cache.enabled=false
#
# feature.cache.type defines what type of cache should be used by most/all feature extractors (i.e.
# those that subclass from AbstractCachingFeatureExtractor).  Default is 'memory'.
#feature.cache.type=memory
#
# feature.fft.max_sampling_rate defines the maximum sampling rate, so that the FFT-related features work across multiple sampling rates.
# Default is 44100.
#feature.fft.max_sampling_rate=44100
#
# feature.fft.max_peak_to_noise_floor_ratio specifies the maximum peak to noise floor ratio of FFT power coefficients.
# Any coefficient that is too small such that the ratio of the peak value to the value of the coefficient exceeds the maximum will be rounded up to satisfy the maximum ratio.
# This prevents the classifiers from capturing the noise floor difference of different training samples, which could have an impact with different bits per sample and different sampling rates.
# Default is 1000000.
#feature.fft.max_peak_to_noise_floor_ratio=1000000
#
# feature.fft.pad_to_power_of_two Specifies whether to pad FFT to power of two. Padding improves the speed of feature extraction 
# but reduces the accuracy of features extraction. Default is true.
#feature.fft.pad_to_power_of_two=false
#
# feature.extraction.pipeline.numlocks is the number of objects used to distributed locks on windows during FeatureExtractionPipeline.extract().
# The default is 128*availableProcessors() and probably does not need to be changed, but is put here largely for documentation purposes.
#feature.extraction.pipeline.numlocks=8096
# feature.iterable.batch_size specifies the batch size (i.e., the number of sounds to read into memory) of parallel feature extraction.
# Default is 16.
#feature.iterable.batch_size=16
## SPARK ##
labeled.feature.iterable.useSpark=false
spark.master.url=spark://icusrv01.watson.ibm.com:7077
spark.app.name=GMM_experiment